name: SonarQubeCheck
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=teamqtest
            -Dsonar.projectName=teamqtest
            -Dsonar.organization=teamq-ec
            -Dsonar.projectVersion=1.0.0
            -Dsonar.scm.provider=git
            -Dsonar.sources=app
            -Dsonar.language=php
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.exclusions=**/app/Console/Kernel.php,**/app/Providers/**,**/vendor/**,**/node_modules/**,**/infrastructure/**,**/lang/**,**/bootstrap/**,**/config/*,**/storage/**,**/public/**,**/tests/**

      - name: Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Check SonarQube Issues
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          response=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "${{ secrets.SONAR_HOST_URL }}/api/issues/search?componentKeys=teamqtest&s=CREATION_DATE&resolved=false&ps=1")
          issues=$(echo "$response" | grep -oP '"total":\s*\K[0-9]+')
          if [[ $issues -gt 0 ]]; then
           echo "There are $issues open issues in SonarQube. Blocking the workflow."
           exit 1
          else
           echo "No open issues found in SonarQube. Continuing the workflow."
          fi
