name: SonarQubeCheck
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  sonarqube_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=teamqtest
            -Dsonar.projectName=teamqtest
            -Dsonar.organization=teamq-ec
            -Dsonar.projectVersion=1.0.0
            -Dsonar.scm.provider=git
            -Dsonar.sources=app
            -Dsonar.language=php
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.exclusions=**/app/Console/Kernel.php,**/app/Providers/**,**/vendor/**,**/node_modules/**,**/infrastructure/**,**/lang/**,**/bootstrap/**,**/config/*,**/storage/**,**/public/**,**/tests/**

      - name: Store SonarQube results
        uses: actions/upload-artifact@v3
        with:
          name: sonarqube-results
          path: .scannerwork

  sonarqube_verification:
    needs: sonarqube_analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download SonarQube results
        uses: actions/download-artifact@v3
        with:
          name: sonarqube-results
          path: .scannerwork

      - name: Check SonarQube Issues
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo $SONAR_TOKEN
          echo $SONAR_HOST_URL
          response=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/issues/search?componentKeys=teamqtest&id=teamqtest&resolved=false&statuses=OPEN")
          issues=$(echo "$response" | awk -F'"total":' '{print $2}' | awk -F',' '{print $1}')
          if [[ $issues -gt 0 ]]; then
            echo "There are $issues open issues in SonarQube. Blocking the workflow."
            exit 1
          else
            echo "No open issues found in SonarQube. Continuing the workflow."
          fi
